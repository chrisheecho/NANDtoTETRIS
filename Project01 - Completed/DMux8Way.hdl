// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not (in = sel[0], out = NotSel0);
    Not (in = sel[1], out = NotSel1);
    Not (in = sel[2], out = NotSel2);

    //ANDa 000
    And (a = in, b = NotSel0, out = Anda1);
    And (a = Anda1, b = NotSel1, out = Anda2);
    And (a = Anda2, b = NotSel2, out = a);

    //ANDb 001
    And (a = in, b = sel[0], out = Andb1);
    And (a = Andb1, b = NotSel1, out = Andb2);
    And (a = Andb2, b = NotSel2, out = b);

    //ANDc 010
    And (a = in, b = NotSel0, out = Andc1);
    And (a = Andc1, b = sel[1], out = Andc2);
    And (a = Andc2, b = NotSel2, out = c);

    //ANDd 011
    And (a = in, b = sel[0], out = Andd1);
    And (a = Andd1, b = sel[1], out = Andd2);
    And (a = Andd2, b = NotSel2, out = d);

    //ANDe 100
    And (a = in, b = NotSel0, out = Ande1);
    And (a = Ande1, b = NotSel1, out = Ande2);
    And (a = Ande2, b = sel[2], out = e);

    //ANDg 110
	And (a = in, b = NotSel0, out = Andg1);
    And (a = Andg1, b = sel[1], out = Andg2);
    And (a = Andg2, b = sel[2], out = g);

    //ANDh 111
    And (a = in, b = sel[0], out = Andh1);
    And (a = Andh1, b = sel[1], out = Andh2);
    And (a = Andh2, b = sel[2], out = h);

     //ANDf 101
    And (a = in, b = sel[0], out = Andf1);
    And (a = Andf1, b = NotSel1, out = Andf2);
    And (a = Andf2, b = sel[2], out = f);


}